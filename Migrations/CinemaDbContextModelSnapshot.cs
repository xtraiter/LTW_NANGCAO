// <auto-generated />
using System;
using CinemaManagement.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CinemaManagement.Migrations
{
    [DbContext(typeof(CinemaDbContext))]
    partial class CinemaDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CinemaManagement.Models.CTHD", b =>
                {
                    b.Property<string>("MaCTHD")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<decimal>("DonGia")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("MaHoaDon")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("MaVe")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.HasKey("MaCTHD");

                    b.HasIndex("MaHoaDon");

                    b.HasIndex("MaVe");

                    b.ToTable("CTHD", (string)null);
                });

            modelBuilder.Entity("CinemaManagement.Models.ChatMessage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BotResponse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("SessionId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserMessage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ChatMessage", (string)null);
                });

            modelBuilder.Entity("CinemaManagement.Models.DanhGiaPhim", b =>
                {
                    b.Property<string>("MaDanhGia")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("maDanhGia");

                    b.Property<int>("DiemDanhGia")
                        .HasColumnType("int")
                        .HasColumnName("diemDanhGia");

                    b.Property<string>("MaKhachHang")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("maKhachHang");

                    b.Property<string>("MaPhim")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("maPhim");

                    b.Property<string>("NoiDungDanhGia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("noiDungDanhGia");

                    b.Property<DateTime>("ThoiGianDanhGia")
                        .HasColumnType("datetime2")
                        .HasColumnName("thoiGianDanhGia");

                    b.HasKey("MaDanhGia");

                    b.HasIndex("MaKhachHang");

                    b.HasIndex("MaPhim");

                    b.ToTable("DanhGiaPhim", (string)null);
                });

            modelBuilder.Entity("CinemaManagement.Models.GheNgoi", b =>
                {
                    b.Property<string>("MaGhe")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<decimal>("GiaGhe")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("LoaiGhe")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MaPhong")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("SoGhe")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("MaGhe");

                    b.HasIndex("MaPhong");

                    b.ToTable("GheNgoi", (string)null);
                });

            modelBuilder.Entity("CinemaManagement.Models.HDVoucher", b =>
                {
                    b.Property<string>("MaHoaDon")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("MaGiamGia")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("SoLuongVoucher")
                        .HasColumnType("int");

                    b.Property<decimal>("TongTien")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("MaHoaDon", "MaGiamGia");

                    b.HasIndex("MaGiamGia");

                    b.ToTable("HD_voucher", (string)null);
                });

            modelBuilder.Entity("CinemaManagement.Models.HoaDon", b =>
                {
                    b.Property<string>("MaHoaDon")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("MaKhachHang")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("MaNhanVien")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.Property<DateTime>("ThoiGianTao")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TongTien")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("MaHoaDon");

                    b.HasIndex("MaKhachHang");

                    b.HasIndex("MaNhanVien");

                    b.ToTable("HoaDon", (string)null);
                });

            modelBuilder.Entity("CinemaManagement.Models.KhachHang", b =>
                {
                    b.Property<string>("MaKhachHang")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("DiemTichLuy")
                        .HasColumnType("int");

                    b.Property<string>("HoTen")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SDT")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("MaKhachHang");

                    b.ToTable("KhachHang", (string)null);
                });

            modelBuilder.Entity("CinemaManagement.Models.LichChieu", b =>
                {
                    b.Property<string>("MaLichChieu")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<decimal>("Gia")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("MaNhanVien")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("MaPhim")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("MaPhong")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("ThoiGianBatDau")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ThoiGianKetThuc")
                        .HasColumnType("datetime2");

                    b.HasKey("MaLichChieu");

                    b.HasIndex("MaNhanVien");

                    b.HasIndex("MaPhim");

                    b.HasIndex("MaPhong");

                    b.ToTable("LichChieu", (string)null);
                });

            modelBuilder.Entity("CinemaManagement.Models.NhanVien", b =>
                {
                    b.Property<string>("MaNhanVien")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("ChucVu")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("NgaySinh")
                        .HasColumnType("datetime2");

                    b.Property<string>("SDT")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("TenNhanVien")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("MaNhanVien");

                    b.ToTable("NhanVien", (string)null);
                });

            modelBuilder.Entity("CinemaManagement.Models.Phim", b =>
                {
                    b.Property<string>("MaPhim")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("DoTuoiPhanAnh")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("MaNhanVien")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenPhim")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("TheLoai")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("ThoiLuong")
                        .HasColumnType("int");

                    b.Property<string>("ViTriFilePhim")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("MaPhim");

                    b.HasIndex("MaNhanVien");

                    b.ToTable("Phim", (string)null);
                });

            modelBuilder.Entity("CinemaManagement.Models.PhongChieu", b =>
                {
                    b.Property<string>("MaPhong")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("LoaiPhong")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("MaNhanVien")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("SoChoNgoi")
                        .HasColumnType("int");

                    b.Property<string>("TenPhong")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("MaPhong");

                    b.HasIndex("MaNhanVien");

                    b.ToTable("PhongChieu", (string)null);
                });

            modelBuilder.Entity("CinemaManagement.Models.TaiKhoan", b =>
                {
                    b.Property<string>("MaTK")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("MaKhachHang")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("MaNhanVien")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("MatKhau")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("MaTK");

                    b.HasIndex("MaKhachHang");

                    b.HasIndex("MaNhanVien");

                    b.ToTable("TaiKhoan", (string)null);
                });

            modelBuilder.Entity("CinemaManagement.Models.Ve", b =>
                {
                    b.Property<string>("MaVe")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<decimal>("Gia")
                        .HasColumnType("decimal(10,2)");

                    b.Property<DateTime>("HanSuDung")
                        .HasColumnType("datetime2");

                    b.Property<string>("MaGhe")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("MaLichChieu")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("MaPhim")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("MaPhong")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("SoGhe")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("TenPhim")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("TenPhong")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("MaVe");

                    b.HasIndex("MaGhe");

                    b.HasIndex("MaLichChieu");

                    b.HasIndex("MaPhim");

                    b.HasIndex("MaPhong");

                    b.ToTable("Ve", (string)null);
                });

            modelBuilder.Entity("CinemaManagement.Models.Voucher", b =>
                {
                    b.Property<string>("MaGiamGia")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("maGiamGia");

                    b.Property<string>("MaNhanVien")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("maNhanVien");

                    b.Property<string>("MoTa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("moTa");

                    b.Property<int>("PhanTramGiam")
                        .HasColumnType("int")
                        .HasColumnName("phanTramGiam");

                    b.Property<string>("TenGiamGia")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("tenGiamGia");

                    b.Property<DateTime>("ThoiGianBatDau")
                        .HasColumnType("datetime2")
                        .HasColumnName("thoiGianBatDau");

                    b.Property<DateTime>("ThoiGianKetThuc")
                        .HasColumnType("datetime2")
                        .HasColumnName("thoiGianKetThuc");

                    b.HasKey("MaGiamGia");

                    b.HasIndex("MaNhanVien");

                    b.ToTable("Voucher", (string)null);
                });

            modelBuilder.Entity("CinemaManagement.Models.CTHD", b =>
                {
                    b.HasOne("CinemaManagement.Models.HoaDon", "HoaDon")
                        .WithMany("CTHDs")
                        .HasForeignKey("MaHoaDon")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CinemaManagement.Models.Ve", "Ve")
                        .WithMany("CTHDs")
                        .HasForeignKey("MaVe")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HoaDon");

                    b.Navigation("Ve");
                });

            modelBuilder.Entity("CinemaManagement.Models.DanhGiaPhim", b =>
                {
                    b.HasOne("CinemaManagement.Models.KhachHang", "KhachHang")
                        .WithMany("DanhGiaPhims")
                        .HasForeignKey("MaKhachHang")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CinemaManagement.Models.Phim", "Phim")
                        .WithMany("DanhGiaPhims")
                        .HasForeignKey("MaPhim")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KhachHang");

                    b.Navigation("Phim");
                });

            modelBuilder.Entity("CinemaManagement.Models.GheNgoi", b =>
                {
                    b.HasOne("CinemaManagement.Models.PhongChieu", "PhongChieu")
                        .WithMany("GheNgois")
                        .HasForeignKey("MaPhong")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PhongChieu");
                });

            modelBuilder.Entity("CinemaManagement.Models.HDVoucher", b =>
                {
                    b.HasOne("CinemaManagement.Models.Voucher", "Voucher")
                        .WithMany("HDVouchers")
                        .HasForeignKey("MaGiamGia")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CinemaManagement.Models.HoaDon", "HoaDon")
                        .WithMany("HDVouchers")
                        .HasForeignKey("MaHoaDon")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HoaDon");

                    b.Navigation("Voucher");
                });

            modelBuilder.Entity("CinemaManagement.Models.HoaDon", b =>
                {
                    b.HasOne("CinemaManagement.Models.KhachHang", "KhachHang")
                        .WithMany("HoaDons")
                        .HasForeignKey("MaKhachHang")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CinemaManagement.Models.NhanVien", "NhanVien")
                        .WithMany("HoaDons")
                        .HasForeignKey("MaNhanVien")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KhachHang");

                    b.Navigation("NhanVien");
                });

            modelBuilder.Entity("CinemaManagement.Models.LichChieu", b =>
                {
                    b.HasOne("CinemaManagement.Models.NhanVien", "NhanVien")
                        .WithMany("LichChieus")
                        .HasForeignKey("MaNhanVien")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CinemaManagement.Models.Phim", "Phim")
                        .WithMany("LichChieus")
                        .HasForeignKey("MaPhim")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CinemaManagement.Models.PhongChieu", "PhongChieu")
                        .WithMany("LichChieus")
                        .HasForeignKey("MaPhong")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NhanVien");

                    b.Navigation("Phim");

                    b.Navigation("PhongChieu");
                });

            modelBuilder.Entity("CinemaManagement.Models.Phim", b =>
                {
                    b.HasOne("CinemaManagement.Models.NhanVien", "NhanVien")
                        .WithMany("Phims")
                        .HasForeignKey("MaNhanVien")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NhanVien");
                });

            modelBuilder.Entity("CinemaManagement.Models.PhongChieu", b =>
                {
                    b.HasOne("CinemaManagement.Models.NhanVien", "NhanVien")
                        .WithMany("PhongChieus")
                        .HasForeignKey("MaNhanVien")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NhanVien");
                });

            modelBuilder.Entity("CinemaManagement.Models.TaiKhoan", b =>
                {
                    b.HasOne("CinemaManagement.Models.KhachHang", "KhachHang")
                        .WithMany("TaiKhoans")
                        .HasForeignKey("MaKhachHang")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("CinemaManagement.Models.NhanVien", "NhanVien")
                        .WithMany("TaiKhoans")
                        .HasForeignKey("MaNhanVien")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("KhachHang");

                    b.Navigation("NhanVien");
                });

            modelBuilder.Entity("CinemaManagement.Models.Ve", b =>
                {
                    b.HasOne("CinemaManagement.Models.GheNgoi", "GheNgoi")
                        .WithMany("Ves")
                        .HasForeignKey("MaGhe")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CinemaManagement.Models.LichChieu", "LichChieu")
                        .WithMany("Ves")
                        .HasForeignKey("MaLichChieu")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CinemaManagement.Models.Phim", "Phim")
                        .WithMany("Ves")
                        .HasForeignKey("MaPhim")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("CinemaManagement.Models.PhongChieu", "PhongChieu")
                        .WithMany("Ves")
                        .HasForeignKey("MaPhong")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("GheNgoi");

                    b.Navigation("LichChieu");

                    b.Navigation("Phim");

                    b.Navigation("PhongChieu");
                });

            modelBuilder.Entity("CinemaManagement.Models.Voucher", b =>
                {
                    b.HasOne("CinemaManagement.Models.NhanVien", "NhanVien")
                        .WithMany("Vouchers")
                        .HasForeignKey("MaNhanVien")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NhanVien");
                });

            modelBuilder.Entity("CinemaManagement.Models.GheNgoi", b =>
                {
                    b.Navigation("Ves");
                });

            modelBuilder.Entity("CinemaManagement.Models.HoaDon", b =>
                {
                    b.Navigation("CTHDs");

                    b.Navigation("HDVouchers");
                });

            modelBuilder.Entity("CinemaManagement.Models.KhachHang", b =>
                {
                    b.Navigation("DanhGiaPhims");

                    b.Navigation("HoaDons");

                    b.Navigation("TaiKhoans");
                });

            modelBuilder.Entity("CinemaManagement.Models.LichChieu", b =>
                {
                    b.Navigation("Ves");
                });

            modelBuilder.Entity("CinemaManagement.Models.NhanVien", b =>
                {
                    b.Navigation("HoaDons");

                    b.Navigation("LichChieus");

                    b.Navigation("Phims");

                    b.Navigation("PhongChieus");

                    b.Navigation("TaiKhoans");

                    b.Navigation("Vouchers");
                });

            modelBuilder.Entity("CinemaManagement.Models.Phim", b =>
                {
                    b.Navigation("DanhGiaPhims");

                    b.Navigation("LichChieus");

                    b.Navigation("Ves");
                });

            modelBuilder.Entity("CinemaManagement.Models.PhongChieu", b =>
                {
                    b.Navigation("GheNgois");

                    b.Navigation("LichChieus");

                    b.Navigation("Ves");
                });

            modelBuilder.Entity("CinemaManagement.Models.Ve", b =>
                {
                    b.Navigation("CTHDs");
                });

            modelBuilder.Entity("CinemaManagement.Models.Voucher", b =>
                {
                    b.Navigation("HDVouchers");
                });
#pragma warning restore 612, 618
        }
    }
}
