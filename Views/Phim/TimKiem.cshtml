@{
    ViewData["Title"] = "Tìm kiếm phim";
}

<div class="container-fluid py-4">
    <!-- Header Section -->
    <div class="row mb-4">
        <div class="col-12 text-center">
            <h1 class="display-4 mb-3">
                <i class="fas fa-search me-3 text-primary"></i>
                Tìm kiếm phim
            </h1>
            <p class="lead text-muted">Khám phá bộ sưu tập phim đa dạng của chúng tôi</p>
        </div>
    </div>

    <!-- Search Section -->
    <div class="row justify-content-center mb-5">
        <div class="col-lg-8">
            <div class="card shadow-lg border-0">
                <div class="card-body p-4">
                    <div class="search-container position-relative">
                        <div class="input-group input-group-lg">
                            <span class="input-group-text bg-primary text-white border-0">
                                <i class="fas fa-search"></i>
                            </span>
                            <input type="text" 
                                   id="searchInput" 
                                   class="form-control border-0 shadow-none" 
                                   placeholder="Nhập tên phim, thể loại hoặc từ khóa..."
                                   autocomplete="off">
                            <button type="button" 
                                    id="clearSearch" 
                                    class="btn btn-outline-secondary d-none">
                                <i class="fas fa-times"></i>
                            </button>
                        </div>
                        
                        <!-- Autocomplete Suggestions -->
                        <div id="suggestionsList" class="suggestions-dropdown position-absolute w-100 d-none">
                            <!-- Dynamic suggestions will be inserted here -->
                        </div>
                    </div>

                    <!-- Advanced Filters -->
                    <div class="row mt-4">
                        <div class="col-md-6">
                            <label for="theLoaiFilter" class="form-label fw-semibold">
                                <i class="fas fa-tags me-1"></i>Thể loại
                            </label>
                            <select class="form-select" id="theLoaiFilter">
                                <option value="all">Tất cả thể loại</option>
                                @if (ViewBag.TheLoaiList != null)
                                {
                                    @foreach (var theLoai in ViewBag.TheLoaiList)
                                    {
                                        <option value="@theLoai">@theLoai</option>
                                    }
                                }
                            </select>
                        </div>
                        <div class="col-md-6">
                            <label class="form-label fw-semibold">
                                <i class="fas fa-sort me-1"></i>Sắp xếp
                            </label>
                            <select class="form-select" id="sortBy">
                                <option value="name">Tên phim (A-Z)</option>
                                <option value="name_desc">Tên phim (Z-A)</option>
                                <option value="duration">Thời lượng tăng dần</option>
                                <option value="duration_desc">Thời lượng giảm dần</option>
                            </select>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Results Section -->
    <div class="row">
        <div class="col-12">
            <!-- Search Stats -->
            <div id="searchStats" class="d-none mb-4">
                <div class="alert alert-info border-0 shadow-sm">
                    <i class="fas fa-info-circle me-2"></i>
                    <span id="statsText">Đang tìm kiếm...</span>
                </div>
            </div>

            <!-- Loading Spinner -->
            <div id="loadingSpinner" class="text-center d-none">
                <div class="spinner-border text-primary" role="status">
                    <span class="visually-hidden">Đang tải...</span>
                </div>
                <p class="mt-2 text-muted">Đang tìm kiếm phim...</p>
            </div>

            <!-- Movies Grid -->
            <div id="moviesGrid" class="row row-cols-1 row-cols-md-2 row-cols-lg-3 row-cols-xl-4 g-4">
                <!-- Movies will be dynamically inserted here -->
            </div>

            <!-- No Results -->
            <div id="noResults" class="text-center py-5 d-none">
                <div class="mb-4">
                    <i class="fas fa-search fa-5x text-muted"></i>
                </div>
                <h3 class="text-muted">Không tìm thấy phim nào</h3>
                <p class="text-muted">Vui lòng thử lại với từ khóa khác</p>
                <button class="btn btn-primary" onclick="clearAllFilters()">
                    <i class="fas fa-refresh me-1"></i>Xóa bộ lọc
                </button>
            </div>

            <!-- Pagination -->
            <div id="pagination" class="d-flex justify-content-center mt-5 d-none">
                <nav aria-label="Movie search pagination">
                    <ul class="pagination pagination-lg" id="paginationList">
                        <!-- Pagination will be dynamically inserted here -->
                    </ul>
                </nav>
            </div>
        </div>
    </div>
</div>

<!-- Movie Detail Modal -->
<div class="modal fade" id="movieDetailModal" tabindex="-1" aria-labelledby="movieDetailModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-centered">
        <div class="modal-content border-0 shadow-lg">
            <div class="modal-header border-0 bg-primary text-white">
                <h5 class="modal-title" id="movieDetailModalLabel">Chi tiết phim</h5>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body p-0">
                <div id="movieDetailContent">
                    <!-- Movie details will be inserted here -->
                </div>
            </div>
        </div>
    </div>
</div>

<style>
.search-container {
    max-width: 100%;
}

.suggestions-dropdown {
    background: white;
    border: 1px solid #dee2e6;
    border-radius: 0.375rem;
    box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
    z-index: 1050;
    top: 100%;
    margin-top: 2px;
}

.suggestion-item {
    padding: 12px 16px;
    border-bottom: 1px solid #f1f3f4;
    cursor: pointer;
    transition: background-color 0.2s ease;
}

.suggestion-item:hover,
.suggestion-item.active {
    background-color: #f8f9fa;
}

.suggestion-item:last-child {
    border-bottom: none;
}

.suggestion-title {
    font-weight: 600;
    color: #333;
    margin-bottom: 4px;
}

.suggestion-meta {
    font-size: 0.875rem;
    color: #6c757d;
}

.movie-card {
    transition: transform 0.3s ease, box-shadow 0.3s ease;
    border: none;
    box-shadow: 0 2px 10px rgba(0,0,0,0.1);
}

.movie-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 8px 25px rgba(0,0,0,0.15);
}

.movie-poster {
    height: 300px;
    object-fit: cover;
    border-radius: 8px 8px 0 0;
}

.movie-poster-placeholder {
    height: 300px;
    background: linear-gradient(45deg, #f8f9fa, #e9ecef);
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: 8px 8px 0 0;
}

.badge-custom {
    font-size: 0.75rem;
    padding: 0.375rem 0.75rem;
}

.info-box {
    background: white;
    border-radius: 0.5rem;
    box-shadow: 0 2px 10px rgba(0,0,0,0.1);
    padding: 1.5rem;
    display: flex;
    align-items: center;
}

.info-box-icon {
    width: 60px;
    height: 60px;
    border-radius: 50%;
    display: flex;
    align-items: center;
    justify-content: center;
    margin-right: 1rem;
    font-size: 1.5rem;
}

.info-box-content {
    flex: 1;
}

.info-box-text {
    display: block;
    font-size: 0.875rem;
    color: #6c757d;
    margin-bottom: 0.25rem;
}

.info-box-number {
    display: block;
    font-size: 1.5rem;
    font-weight: 700;
    color: #333;
}

@@media (max-width: 768px) {
    .movie-poster {
        height: 250px;
    }
    
    .display-4 {
        font-size: 2rem;
    }
}
</style>

<script>
let currentPage = 1;
let currentSearchTerm = '';
let currentTheLoai = 'all';
let searchTimeout;
let selectedSuggestionIndex = -1;

document.addEventListener('DOMContentLoaded', function() {
    const searchInput = document.getElementById('searchInput');
    const theLoaiFilter = document.getElementById('theLoaiFilter');
    const sortBy = document.getElementById('sortBy');
    const clearSearch = document.getElementById('clearSearch');
    const suggestionsList = document.getElementById('suggestionsList');

    // Get search term from URL parameters
    const urlParams = new URLSearchParams(window.location.search);
    const initialSearchTerm = urlParams.get('search');
    
    if (initialSearchTerm) {
        searchInput.value = initialSearchTerm;
        currentSearchTerm = initialSearchTerm;
        clearSearch.classList.remove('d-none');
    }

    // Search input event handlers
    searchInput.addEventListener('input', handleSearchInput);
    searchInput.addEventListener('keydown', handleKeyNavigation);
    searchInput.addEventListener('focus', handleSearchFocus);
    
    // Filter change handlers
    theLoaiFilter.addEventListener('change', handleFilterChange);
    sortBy.addEventListener('change', handleFilterChange);
    
    // Clear search
    clearSearch.addEventListener('click', clearAllFilters);
    
    // Click outside to close suggestions
    document.addEventListener('click', function(e) {
        if (!e.target.closest('.search-container')) {
            hideSuggestions();
        }
    });

    // Initial load - show all movies or search results
    searchMovies();
});

function handleSearchInput(e) {
    const term = e.target.value.trim();
    const clearBtn = document.getElementById('clearSearch');
    
    if (term.length > 0) {
        clearBtn.classList.remove('d-none');
    } else {
        clearBtn.classList.add('d-none');
    }

    clearTimeout(searchTimeout);
    
    if (term.length >= 2) {
        searchTimeout = setTimeout(() => {
            loadSuggestions(term);
        }, 300);
    } else {
        hideSuggestions();
    }
    
    // Also trigger movie search
    searchTimeout = setTimeout(() => {
        currentSearchTerm = term;
        currentPage = 1;
        searchMovies();
    }, 500);
}

function handleKeyNavigation(e) {
    const suggestions = document.querySelectorAll('.suggestion-item');
    
    switch(e.key) {
        case 'ArrowDown':
            e.preventDefault();
            selectedSuggestionIndex = Math.min(selectedSuggestionIndex + 1, suggestions.length - 1);
            updateSuggestionSelection(suggestions);
            break;
            
        case 'ArrowUp':
            e.preventDefault();
            selectedSuggestionIndex = Math.max(selectedSuggestionIndex - 1, -1);
            updateSuggestionSelection(suggestions);
            break;
            
        case 'Enter':
            e.preventDefault();
            if (selectedSuggestionIndex >= 0 && suggestions[selectedSuggestionIndex]) {
                selectSuggestion(suggestions[selectedSuggestionIndex]);
            }
            break;
            
        case 'Escape':
            hideSuggestions();
            e.target.blur();
            break;
    }
}

function handleSearchFocus(e) {
    const term = e.target.value.trim();
    if (term.length >= 2) {
        loadSuggestions(term);
    }
}

function handleFilterChange() {
    currentTheLoai = document.getElementById('theLoaiFilter').value;
    currentPage = 1;
    searchMovies();
}

function updateSuggestionSelection(suggestions) {
    suggestions.forEach((item, index) => {
        item.classList.toggle('active', index === selectedSuggestionIndex);
    });
}

function loadSuggestions(term) {
    fetch(`/Phim/SearchSuggestions?term=${encodeURIComponent(term)}`)
        .then(response => response.json())
        .then(data => {
            displaySuggestions(data.suggestions);
        })
        .catch(error => {
            console.error('Error loading suggestions:', error);
        });
}

function displaySuggestions(suggestions) {
    const suggestionsList = document.getElementById('suggestionsList');
    
    if (suggestions.length === 0) {
        hideSuggestions();
        return;
    }
    
    const html = suggestions.map(movie => `
        <div class="suggestion-item" onclick="selectMovieFromSuggestion('${movie.tenPhim}')">
            <div class="d-flex align-items-center">
                <div class="me-3">
                    ${movie.viTriFilePhim ? 
                        `<img src="${movie.viTriFilePhim}" alt="${movie.tenPhim}" class="rounded" style="width: 40px; height: 55px; object-fit: cover;">` :
                        `<div class="bg-light rounded d-flex align-items-center justify-content-center" style="width: 40px; height: 55px;">
                            <i class="fas fa-film text-muted"></i>
                        </div>`
                    }
                </div>
                <div class="flex-grow-1">
                    <div class="suggestion-title">${movie.tenPhim}</div>
                    <div class="suggestion-meta">
                        <span class="badge bg-primary me-1">${movie.theLoai}</span>
                        <span class="text-muted">${movie.thoiLuong} phút</span>
                        <span class="badge bg-warning ms-1">${movie.doTuoiPhanAnh}</span>
                    </div>
                </div>
            </div>
        </div>
    `).join('');
    
    suggestionsList.innerHTML = html;
    suggestionsList.classList.remove('d-none');
    selectedSuggestionIndex = -1;
}

function selectMovieFromSuggestion(movieTitle) {
    document.getElementById('searchInput').value = movieTitle;
    hideSuggestions();
    currentSearchTerm = movieTitle;
    currentPage = 1;
    searchMovies();
}

function selectSuggestion(suggestionElement) {
    const movieTitle = suggestionElement.querySelector('.suggestion-title').textContent;
    selectMovieFromSuggestion(movieTitle);
}

function hideSuggestions() {
    document.getElementById('suggestionsList').classList.add('d-none');
    selectedSuggestionIndex = -1;
}

function clearSearch() {
    document.getElementById('searchInput').value = '';
    document.getElementById('clearSearch').classList.add('d-none');
    hideSuggestions();
    currentSearchTerm = '';
    currentPage = 1;
    searchMovies();
}

function searchMovies() {
    showLoading();
    
    const params = new URLSearchParams({
        searchTerm: currentSearchTerm,
        theLoai: currentTheLoai,
        page: currentPage,
        pageSize: 12
    });
    
    fetch(`/Phim/SearchMovies?${params}`)
        .then(response => response.json())
        .then(data => {
            displayMovies(data);
            displayPagination(data);
            updateSearchStats(data);
            hideLoading();
        })
        .catch(error => {
            console.error('Error searching movies:', error);
            hideLoading();
            showNoResults();
        });
}

function displayMovies(data) {
    const moviesGrid = document.getElementById('moviesGrid');
    const noResults = document.getElementById('noResults');
    
    if (data.movies.length === 0) {
        moviesGrid.innerHTML = '';
        noResults.classList.remove('d-none');
        return;
    }
    
    noResults.classList.add('d-none');
    
    const html = data.movies.map(movie => `
        <div class="col">
            <div class="card movie-card h-100" onclick="showMovieDetail('${movie.maPhim}')">
                <div class="position-relative">
                    ${movie.viTriFilePhim ? 
                        `<img src="${movie.viTriFilePhim}" alt="${movie.tenPhim}" class="card-img-top movie-poster">` :
                        `<div class="movie-poster-placeholder">
                            <i class="fas fa-film fa-3x text-muted"></i>
                        </div>`
                    }
                    <div class="position-absolute top-0 end-0 m-2">
                        <span class="badge bg-warning badge-custom">${movie.doTuoiPhanAnh}</span>
                    </div>
                </div>
                <div class="card-body d-flex flex-column">
                    <h5 class="card-title text-truncate" title="${movie.tenPhim}">${movie.tenPhim}</h5>
                    <div class="mb-2">
                        <span class="badge bg-primary badge-custom me-1">${movie.theLoai}</span>
                        <small class="text-muted">${movie.thoiLuong} phút</small>
                    </div>
                    <p class="card-text flex-grow-1 text-muted small">${movie.moTa}</p>
                    <div class="mt-auto">
                        <button class="btn btn-outline-primary btn-sm w-100">
                            <i class="fas fa-info-circle me-1"></i>Xem chi tiết
                        </button>
                    </div>
                </div>
            </div>
        </div>
    `).join('');
    
    moviesGrid.innerHTML = html;
}

function displayPagination(data) {
    const pagination = document.getElementById('pagination');
    const paginationList = document.getElementById('paginationList');
    
    if (data.totalPages <= 1) {
        pagination.classList.add('d-none');
        return;
    }
    
    pagination.classList.remove('d-none');
    
    let html = '';
    
    // Previous button
    html += `
        <li class="page-item ${!data.hasPreviousPage ? 'disabled' : ''}">
            <button class="page-link" onclick="changePage(${data.currentPage - 1})" ${!data.hasPreviousPage ? 'disabled' : ''}>
                <i class="fas fa-chevron-left"></i>
            </button>
        </li>
    `;
    
    // Page numbers
    const startPage = Math.max(1, data.currentPage - 2);
    const endPage = Math.min(data.totalPages, data.currentPage + 2);
    
    if (startPage > 1) {
        html += `<li class="page-item"><button class="page-link" onclick="changePage(1)">1</button></li>`;
        if (startPage > 2) {
            html += `<li class="page-item disabled"><span class="page-link">...</span></li>`;
        }
    }
    
    for (let i = startPage; i <= endPage; i++) {
        html += `
            <li class="page-item ${i === data.currentPage ? 'active' : ''}">
                <button class="page-link" onclick="changePage(${i})">${i}</button>
            </li>
        `;
    }
    
    if (endPage < data.totalPages) {
        if (endPage < data.totalPages - 1) {
            html += `<li class="page-item disabled"><span class="page-link">...</span></li>`;
        }
        html += `<li class="page-item"><button class="page-link" onclick="changePage(${data.totalPages})">${data.totalPages}</button></li>`;
    }
    
    // Next button
    html += `
        <li class="page-item ${!data.hasNextPage ? 'disabled' : ''}">
            <button class="page-link" onclick="changePage(${data.currentPage + 1})" ${!data.hasNextPage ? 'disabled' : ''}>
                <i class="fas fa-chevron-right"></i>
            </button>
        </li>
    `;
    
    paginationList.innerHTML = html;
}

function updateSearchStats(data) {
    const searchStats = document.getElementById('searchStats');
    const statsText = document.getElementById('statsText');
    
    let message = `Tìm thấy ${data.totalCount} phim`;
    
    if (currentSearchTerm) {
        message += ` cho từ khóa "<strong>${currentSearchTerm}</strong>"`;
    }
    
    if (currentTheLoai && currentTheLoai !== 'all') {
        message += ` trong thể loại "<strong>${currentTheLoai}</strong>"`;
    }
    
    statsText.innerHTML = message;
    searchStats.classList.remove('d-none');
}

function changePage(page) {
    currentPage = page;
    searchMovies();
    window.scrollTo({ top: 0, behavior: 'smooth' });
}

function showLoading() {
    document.getElementById('loadingSpinner').classList.remove('d-none');
    document.getElementById('moviesGrid').style.opacity = '0.5';
}

function hideLoading() {
    document.getElementById('loadingSpinner').classList.add('d-none');
    document.getElementById('moviesGrid').style.opacity = '1';
}

function showNoResults() {
    document.getElementById('noResults').classList.remove('d-none');
    document.getElementById('moviesGrid').innerHTML = '';
}

function clearAllFilters() {
    document.getElementById('searchInput').value = '';
    document.getElementById('theLoaiFilter').value = 'all';
    document.getElementById('clearSearch').classList.add('d-none');
    currentSearchTerm = '';
    currentTheLoai = 'all';
    currentPage = 1;
    hideSuggestions();
    searchMovies();
}

function showMovieDetail(maPhim) {
    // Implementation would load movie details in modal
    // For now, redirect to movie detail page
    window.location.href = `/KhachHang/ChiTietPhim?maPhim=${maPhim}`;
}
</script> 