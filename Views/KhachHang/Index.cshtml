@model List<CinemaManagement.Models.Phim>
@{
    ViewData["Title"] = "Danh sách phim";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container-fluid mt-4">
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header bg-primary text-white">
                    <h4 class="mb-0">
                        <i class="fas fa-film me-2"></i>Danh sách phim đang chiếu
                    </h4>
                </div>
                <div class="card-body">
                    <!-- Bộ lọc và tìm kiếm nâng cao -->
                    <div class="advanced-filter-section mb-4">
                        <div class="card shadow-sm border-0">
                            <div class="card-header bg-gradient-primary text-white">
                                <div class="d-flex justify-content-between align-items-center">
                                    <h5 class="mb-0">
                                        <i class="fas fa-filter me-2"></i>Bộ lọc và tìm kiếm
                                    </h5>
                                    <button type="button" class="btn btn-outline-light btn-sm" id="toggleFilters">
                                        <i class="fas fa-chevron-up" id="filterToggleIcon"></i>
                                        Thu gọn
                                    </button>
                                </div>
                            </div>
                            <div class="card-body" id="filterContent">
                                <form method="get" id="filterForm">
                                    <!-- Tìm kiếm chính -->
                                    <div class="row mb-3">
                                        <div class="col-12">
                                            <div class="input-group input-group-lg">
                                                <span class="input-group-text bg-primary text-white">
                                                    <i class="fas fa-search"></i>
                                                </span>
                                                <input type="text" name="searchTerm" class="form-control" 
                                                       placeholder="Tìm kiếm phim theo tên, mô tả..." 
                                                       value="@ViewBag.CurrentSearch">
                                                @if (!string.IsNullOrEmpty(ViewBag.CurrentSearch))
                                                {
                                                    <button type="button" class="btn btn-outline-secondary" onclick="clearSearch()">
                                                        <i class="fas fa-times"></i>
                                                    </button>
                                                }
                                            </div>
                                        </div>
                                    </div>

                                    <!-- Bộ lọc nâng cao -->
                                    <div class="row g-3">
                                        <!-- Thể loại -->
                                        <div class="col-md-3">
                                            <label class="form-label fw-semibold">
                                                <i class="fas fa-tags text-primary me-1"></i>Thể loại
                                            </label>
                                            <select name="theLoai" class="form-select">
                                                <option value="">Tất cả thể loại</option>
                                                @if (ViewBag.TheLoais != null)
                                                {
                                                    @foreach (string theLoai in ViewBag.TheLoais)
                                                    {
                                                        <option value="@theLoai" selected="@(ViewBag.CurrentTheLoai == theLoai)">@theLoai</option>
                                                    }
                                                }
                                            </select>
                                        </div>

                                        <!-- Độ tuổi -->
                                        <div class="col-md-3">
                                            <label class="form-label fw-semibold">
                                                <i class="fas fa-users text-info me-1"></i>Độ tuổi
                                            </label>
                                            <select name="doTuoi" class="form-select">
                                                <option value="">Tất cả độ tuổi</option>
                                                @if (ViewBag.DoTuoiOptions != null)
                                                {
                                                    @foreach (string doTuoi in ViewBag.DoTuoiOptions)
                                                    {
                                                        <option value="@doTuoi" selected="@(ViewBag.CurrentDoTuoi == doTuoi)">@doTuoi</option>
                                                    }
                                                }
                                            </select>
                                        </div>

                                        <!-- Thời lượng -->
                                        <div class="col-md-3">
                                            <label class="form-label fw-semibold">
                                                <i class="fas fa-clock text-warning me-1"></i>Thời lượng
                                            </label>
                                            <select name="thoiLuongFilter" class="form-select">
                                                <option value="">Tất cả thời lượng</option>
                                                <option value="short" selected="@(ViewBag.CurrentThoiLuongFilter == "short")">Ngắn (≤90p)</option>
                                                <option value="medium" selected="@(ViewBag.CurrentThoiLuongFilter == "medium")">Trung bình (90-150p)</option>
                                                <option value="long" selected="@(ViewBag.CurrentThoiLuongFilter == "long")">Dài (>150p)</option>
                                            </select>
                                        </div>

                                        <!-- Giá vé -->
                                        <div class="col-md-3">
                                            <label class="form-label fw-semibold">
                                                <i class="fas fa-money-bill text-success me-1"></i>Mức giá
                                            </label>
                                            <select name="giaFilter" class="form-select">
                                                <option value="">Tất cả mức giá</option>
                                                <option value="budget" selected="@(ViewBag.CurrentGiaFilter == "budget")">Tiết kiệm (≤80k)</option>
                                                <option value="medium" selected="@(ViewBag.CurrentGiaFilter == "medium")">Trung bình (80k-150k)</option>
                                                <option value="premium" selected="@(ViewBag.CurrentGiaFilter == "premium")">Cao cấp (>150k)</option>
                                            </select>
                                        </div>

                                        <!-- Đánh giá -->
                                        <div class="col-md-6">
                                            <label class="form-label fw-semibold">
                                                <i class="fas fa-star text-warning me-1"></i>Đánh giá tối thiểu
                                            </label>
                                            <div class="rating-slider-container">
                                                <input type="range" class="form-range" id="ratingSlider" name="ratingFilter" 
                                                       min="0" max="10" step="0.5" value="@(ViewBag.CurrentRatingFilter ?? 0)">
                                                <div class="d-flex justify-content-between small text-muted">
                                                    <span>0</span>
                                                    <span class="fw-semibold text-warning" id="ratingValue">@(ViewBag.CurrentRatingFilter ?? 0)</span>
                                                    <span>10</span>
                                                </div>
                                            </div>
                                        </div>

                                        <!-- Sắp xếp -->
                                        <div class="col-md-6">
                                            <label class="form-label fw-semibold">
                                                <i class="fas fa-sort text-secondary me-1"></i>Sắp xếp theo
                                            </label>
                                            <select name="sortBy" class="form-select">
                                                <option value="name_asc" selected="@(ViewBag.CurrentSortBy == "name_asc")">Tên A-Z</option>
                                                <option value="name_desc" selected="@(ViewBag.CurrentSortBy == "name_desc")">Tên Z-A</option>
                                                <option value="rating_desc" selected="@(ViewBag.CurrentSortBy == "rating_desc")">Đánh giá cao nhất</option>
                                                <option value="rating_asc" selected="@(ViewBag.CurrentSortBy == "rating_asc")">Đánh giá thấp nhất</option>
                                                <option value="duration_desc" selected="@(ViewBag.CurrentSortBy == "duration_desc")">Thời lượng dài nhất</option>
                                                <option value="duration_asc" selected="@(ViewBag.CurrentSortBy == "duration_asc")">Thời lượng ngắn nhất</option>
                                                <option value="price_desc" selected="@(ViewBag.CurrentSortBy == "price_desc")">Giá cao nhất</option>
                                                <option value="price_asc" selected="@(ViewBag.CurrentSortBy == "price_asc")">Giá thấp nhất</option>
                                                <option value="popularity_desc" selected="@(ViewBag.CurrentSortBy == "popularity_desc")">Phổ biến nhất</option>
                                            </select>
                                        </div>
                                    </div>

                                    <!-- Nút điều khiển -->
                                    <div class="row mt-4">
                                        <div class="col-12">
                                            <div class="d-flex justify-content-between flex-wrap gap-2">
                                                <div class="d-flex gap-2">
                                                    <button type="submit" class="btn btn-primary btn-lg">
                                                        <i class="fas fa-search me-2"></i>Tìm kiếm
                                                    </button>
                                                    <button type="button" class="btn btn-outline-secondary" onclick="clearAllFilters()">
                                                        <i class="fas fa-eraser me-2"></i>Xóa bộ lọc
                                                    </button>
                                                </div>
                                                <div class="filter-summary" id="filterSummary">
                                                    <!-- Filter summary will be inserted here -->
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </form>
                            </div>
                        </div>
                    </div>

                    <!-- Danh sách phim -->
                    @if (Model != null && Model.Any())
                    {
                        <!-- Carousel Phim -->
                        <div id="phimCarousel" class="carousel slide" data-bs-ride="carousel">
                            <!-- Indicators -->
                            <div class="carousel-indicators">
                                @{
                                    var phimPerSlide = 4; // 4 phim mỗi slide
                                    var totalPhimSlides = (int)Math.Ceiling(Model.Count / (double)phimPerSlide);
                                }
                                @for (int i = 0; i < totalPhimSlides; i++)
                                {
                                    <button type="button" data-bs-target="#phimCarousel" data-bs-slide-to="@i" 
                                            class="@(i == 0 ? "active" : "")" aria-current="@(i == 0 ? "true" : "false")" 
                                            aria-label="Slide @(i + 1)"></button>
                                }
                            </div>

                            <!-- Carousel Items -->
                            <div class="carousel-inner">
                                @for (int slideIndex = 0; slideIndex < totalPhimSlides; slideIndex++)
                                {
                                    <div class="carousel-item @(slideIndex == 0 ? "active" : "")">
                                        <div class="container-fluid p-4">
                                            <div class="row justify-content-center">
                                                @for (int phimIndex = 0; phimIndex < phimPerSlide; phimIndex++)
                                                {
                                                    var currentPhimIndex = slideIndex * phimPerSlide + phimIndex;
                                                    if (currentPhimIndex < Model.Count)
                                                    {
                                                        var phim = Model[currentPhimIndex];
                                                        <div class="col-md-6 col-lg-3 mb-4">
                                                            <div class="phim-carousel-card card h-100 shadow-sm">
                                                                <div class="card-img-top bg-light d-flex align-items-center justify-content-center" 
                                                                     style="height: 250px;">
                                                                    @if (!string.IsNullOrEmpty(phim.ViTriFilePhim))
                                                                    {
                                                                        <img src="@phim.ViTriFilePhim" alt="@phim.TenPhim" 
                                                                             class="img-fluid" style="max-height: 100%; max-width: 100%; object-fit: cover;">
                                                                    }
                                                                    else
                                                                    {
                                                                        <div class="text-center text-muted">
                                                                            <i class="fas fa-film fa-2x"></i>
                                                                            <p class="mt-2 small">Không có poster</p>
                                                                        </div>
                                                                    }
                                                                </div>
                                                                <div class="card-body p-3">
                                                                    <h6 class="card-title text-primary">@phim.TenPhim</h6>
                                                                    <div class="card-text">
                                                                        <div class="info-line">
                                                                            <i class="fas fa-tag me-2 text-success"></i>
                                                                            <span class="small">@phim.TheLoai</span>
                                                                        </div>
                                                                        <div class="info-line">
                                                                            <i class="fas fa-clock me-2 text-warning"></i>
                                                                            <span class="small">@phim.ThoiLuong phút</span>
                                                                        </div>
                                                                        <div class="info-line">
                                                                            <i class="fas fa-users me-2 text-info"></i>
                                                                            <span class="small">@phim.DoTuoiPhanAnh</span>
                                                                        </div>
                                                                        <div class="info-line rating-line" data-phim="@phim.MaPhim">
                                                                            <div class="movie-rating">
                                                                                <div class="stars-small">
                                                                                    <!-- Stars will be loaded via JavaScript -->
                                                                                </div>
                                                                                <span class="rating-text small text-muted ms-1">Đang tải...</span>
                                                                            </div>
                                                                        </div>
                                                                    </div>
                                                                    <p class="card-text small text-muted mt-2">
                                                                        @(phim.MoTa.Length > 80 ? phim.MoTa.Substring(0, 80) + "..." : phim.MoTa)
                                                                    </p>
                                                                </div>
                                                                <div class="card-footer p-2">
                                                                    <div class="d-flex gap-1">
                                                                        <a href="@Url.Action("ChiTietPhim", new { id = phim.MaPhim })" 
                                                                           class="btn btn-primary btn-sm w-100">
                                                                            <i class="fas fa-info-circle me-1"></i>Chi tiết
                                                                        </a>
                                                                    </div>
                                                                </div>
                                                            </div>
                                                        </div>
                                                    }
                                                }
                                            </div>
                                        </div>
                                    </div>
                                }
                            </div>

                            <!-- Controls -->
                            <button class="carousel-control-prev" type="button" data-bs-target="#phimCarousel" data-bs-slide="prev">
                                <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                                <span class="visually-hidden">Previous</span>
                            </button>
                            <button class="carousel-control-next" type="button" data-bs-target="#phimCarousel" data-bs-slide="next">
                                <span class="carousel-control-next-icon" aria-hidden="true"></span>
                                <span class="visually-hidden">Next</span>
                            </button>
                        </div>
                    }
                    else
                    {
                        <div class="text-center py-5">
                            <i class="fas fa-film fa-3x text-muted mb-3"></i>
                            <h5 class="text-muted">Không có phim nào</h5>
                            <p class="text-muted">Hiện tại không có phim nào phù hợp với tìm kiếm của bạn.</p>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>

    <!-- Lịch chiếu sắp tới -->
    <div class="row mt-4">
        <div class="col-12">
            <div class="card">
                <div class="card-header bg-primary text-white">
                    <div class="d-flex justify-content-between align-items-center">
                        <h4 class="mb-0">
                            <i class="fas fa-calendar-check me-2"></i>Lịch chiếu theo ngày
                        </h4>
                        <div class="d-flex align-items-center">
                            <label class="text-white me-2 mb-0">Chọn ngày:</label>
                            <input type="date" id="dateFilter" class="form-control form-control-sm" 
                                   style="width: auto; min-width: 150px;" 
                                   value="@DateTime.Today.ToString("yyyy-MM-dd")"
                                   min="@DateTime.Today.ToString("yyyy-MM-dd")"
                                   max="@DateTime.Today.AddDays(30).ToString("yyyy-MM-dd")">
                        </div>
                    </div>
                </div>
                <div class="card-body p-0" id="scheduleContainer">
                    @if (ViewBag.LichChieuSapToi != null && ((List<CinemaManagement.Models.LichChieu>)ViewBag.LichChieuSapToi).Any())
                    {
                        var lichChieus = (List<CinemaManagement.Models.LichChieu>)ViewBag.LichChieuSapToi;
                        
                        <!-- Hiển thị lịch chiếu cho ngày được chọn -->
                        <div id="scheduleContent">
                            <!-- Content sẽ được load bằng JavaScript -->
                        </div>
                    }
                    else
                    {
                        <div class="text-center py-4">
                            <i class="fas fa-calendar-times fa-3x text-muted mb-3"></i>
                            <h5 class="text-muted">Chưa có lịch chiếu</h5>
                            <p class="text-muted">Hiện tại chưa có lịch chiếu nào trong hệ thống.</p>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Cập nhật số lượng giỏ hàng
        $(document).ready(function() {
            updateCartCount();
            
            // Tooltip
            var tooltipTriggerList = [].slice.call(document.querySelectorAll('[data-bs-toggle="tooltip"]'));
            var tooltipList = tooltipTriggerList.map(function (tooltipTriggerEl) {
                return new bootstrap.Tooltip(tooltipTriggerEl);
            });

            // Initialize advanced filters
            initializeAdvancedFilters();

            // Initialize carousel cho phim
            var phimCarousel = new bootstrap.Carousel(document.getElementById('phimCarousel'), {
                interval: 6000, // Auto slide every 6 seconds
                wrap: true,
                touch: true
            });

            // Pause phim carousel on hover
            $('#phimCarousel').hover(
                function() {
                    phimCarousel.pause();
                },
                function() {
                    phimCarousel.cycle();
                }
            );

            // Animation cho phim carousel
            $('#phimCarousel').on('slide.bs.carousel', function (e) {
                $('.carousel-item.active .phim-carousel-card').addClass('slide-out');
            });

            $('#phimCarousel').on('slid.bs.carousel', function (e) {
                $('.carousel-item.active .phim-carousel-card').each(function(index) {
                    var $card = $(this);
                    setTimeout(function() {
                        $card.addClass('slide-in');
                    }, index * 50);
                });
                $('.phim-carousel-card').removeClass('slide-out');
            });

            // Initial animation for phim carousel
            $('.carousel-item.active .phim-carousel-card').each(function(index) {
                var $card = $(this);
                setTimeout(function() {
                    $card.addClass('slide-in');
                }, index * 50);
            });

            // Date filter functionality
            $('#dateFilter').on('change', function() {
                var selectedDate = $(this).val();
                if (selectedDate) {
                    loadScheduleForDate(selectedDate);
                }
            });

            // Load schedule for today on page load
            loadScheduleForDate($('#dateFilter').val());

            // Animation for today's schedule cards
            $('.today-schedule-card').each(function(index) {
                $(this).css('animation-delay', (index * 0.1) + 's');
            });

            // Hover effects for schedule cards
            $(document).on('mouseenter', '.today-schedule-card', function() {
                $(this).find('.btn:not(:disabled)').addClass('btn-hover-effect');
            }).on('mouseleave', '.today-schedule-card', function() {
                $(this).find('.btn').removeClass('btn-hover-effect');
            });

            // Real-time status update for showtimes
            function updateShowtimeStatus() {
                $('.today-schedule-card').each(function() {
                    // This could be enhanced with real-time data
                    // For now, just update button states based on current time
                });
            }

            // Update status every minute
            setInterval(updateShowtimeStatus, 60000);
            
            // Load rating for all movies
            loadMovieRatings();
        });

        // Initialize advanced filters functionality
        function initializeAdvancedFilters() {
            // Toggle filters visibility
            $('#toggleFilters').on('click', function() {
                var $content = $('#filterContent');
                var $icon = $('#filterToggleIcon');
                var $button = $(this);
                
                if ($content.is(':visible')) {
                    $content.slideUp(300);
                    $icon.removeClass('fa-chevron-up').addClass('fa-chevron-down');
                    $button.html('<i class="fas fa-chevron-down" id="filterToggleIcon"></i> Mở rộng');
                } else {
                    $content.slideDown(300);
                    $icon.removeClass('fa-chevron-down').addClass('fa-chevron-up');
                    $button.html('<i class="fas fa-chevron-up" id="filterToggleIcon"></i> Thu gọn');
                }
            });

            // Rating slider functionality
            $('#ratingSlider').on('input', function() {
                var value = $(this).val();
                $('#ratingValue').text(value);
                if (value > 0) {
                    $('#ratingValue').html(value + ' <i class="fas fa-star"></i>');
                } else {
                    $('#ratingValue').text('0');
                }
            });

            // Auto-submit on filter change (optional)
            $('.form-select').on('change', function() {
                if ($(this).closest('form').hasClass('auto-submit')) {
                    $(this).closest('form').submit();
                }
            });

            // Update filter summary
            updateFilterSummary();

            // Show filter count in header
            updateFilterCount();
        }

        // Clear search function
        function clearSearch() {
            $('input[name="searchTerm"]').val('');
            $('#filterForm').submit();
        }

        // Clear all filters function
        function clearAllFilters() {
            $('#filterForm')[0].reset();
            $('#ratingValue').text('0');
            window.location.href = '@Url.Action("Index")';
        }

        // Update filter summary
        function updateFilterSummary() {
            var filters = [];
            var form = $('#filterForm');
            
            // Check each filter
            if (form.find('[name="searchTerm"]').val()) {
                filters.push('Tìm kiếm: "' + form.find('[name="searchTerm"]').val() + '"');
            }
            if (form.find('[name="theLoai"]').val()) {
                filters.push('Thể loại: ' + form.find('[name="theLoai"] option:selected').text());
            }
            if (form.find('[name="doTuoi"]').val()) {
                filters.push('Độ tuổi: ' + form.find('[name="doTuoi"] option:selected').text());
            }
            if (form.find('[name="thoiLuongFilter"]').val()) {
                filters.push('Thời lượng: ' + form.find('[name="thoiLuongFilter"] option:selected').text());
            }
            if (form.find('[name="giaFilter"]').val()) {
                filters.push('Giá: ' + form.find('[name="giaFilter"] option:selected').text());
            }
            if (form.find('[name="ratingFilter"]').val() > 0) {
                filters.push('Đánh giá: ≥' + form.find('[name="ratingFilter"]').val());
            }
            
            var summary = '';
            if (filters.length > 0) {
                summary = '<small class="text-muted"><strong>Bộ lọc đang áp dụng:</strong> ' + filters.join(', ') + '</small>';
            }
            
            $('#filterSummary').html(summary);
        }

        // Update filter count
        function updateFilterCount() {
            var activeFilters = 0;
            var form = $('#filterForm');
            
            if (form.find('[name="searchTerm"]').val()) activeFilters++;
            if (form.find('[name="theLoai"]').val()) activeFilters++;
            if (form.find('[name="doTuoi"]').val()) activeFilters++;
            if (form.find('[name="thoiLuongFilter"]').val()) activeFilters++;
            if (form.find('[name="giaFilter"]').val()) activeFilters++;
            if (form.find('[name="ratingFilter"]').val() > 0) activeFilters++;
            
            var $header = $('.card-header h5');
            if (activeFilters > 0) {
                $header.html('<i class="fas fa-filter me-2"></i>Bộ lọc và tìm kiếm <span class="badge bg-warning ms-2">' + activeFilters + '</span>');
            } else {
                $header.html('<i class="fas fa-filter me-2"></i>Bộ lọc và tìm kiếm');
            }
        }

        function loadMovieRatings() {
            $('.rating-line').each(function() {
                var $ratingLine = $(this);
                var maPhim = $ratingLine.data('phim');
                
                $.ajax({
                    url: '@Url.Action("GetPhimRating")',
                    type: 'GET',
                    data: { id: maPhim },
                    success: function(response) {
                        displayMovieRating($ratingLine, response.diemTrungBinh, response.tongSoDanhGia);
                    },
                    error: function() {
                        $ratingLine.find('.rating-text').text('Chưa có đánh giá');
                    }
                });
            });
        }

        function displayMovieRating($element, diemTrungBinh, tongSoDanhGia) {
            var $starsContainer = $element.find('.stars-small');
            var $ratingText = $element.find('.rating-text');
            
            // Clear existing stars
            $starsContainer.empty();
            
            if (tongSoDanhGia === 0) {
                $ratingText.text('Chưa có đánh giá');
                return;
            }
            
            // Generate stars (using 5-star scale for display)
            var scaledRating = diemTrungBinh / 2; // Convert 10-point to 5-point scale
            
            for (var i = 1; i <= 5; i++) {
                var starClass = '';
                if (i <= scaledRating) {
                    starClass = 'fas fa-star text-warning';
                } else if (i - 0.5 <= scaledRating) {
                    starClass = 'fas fa-star-half-alt text-warning';
                } else {
                    starClass = 'far fa-star text-muted';
                }
                
                $starsContainer.append('<i class="' + starClass + '"></i>');
            }
            
            $ratingText.text(diemTrungBinh.toFixed(1) + '/10 (' + tongSoDanhGia + ')');
        }

        function loadScheduleForDate(selectedDate) {
            // Show loading state
            $('#scheduleContent').html(`
                <div class="text-center py-5">
                    <div class="spinner-border text-success" role="status">
                        <span class="visually-hidden">Đang tải...</span>
                    </div>
                    <p class="mt-3 text-muted">Đang tải lịch chiếu...</p>
                </div>
            `);

            // Get all schedule data from server-side
            var allSchedules = @Html.Raw(Json.Serialize(ViewBag.LichChieuDto ?? new List<object>()));
            
            // Filter schedules for selected date
            var selectedDateObj = new Date(selectedDate);
            var filteredSchedules = allSchedules.filter(function(schedule) {
                var scheduleDate = new Date(schedule.ThoiGianBatDau || schedule.thoiGianBatDau);
                return scheduleDate.toDateString() === selectedDateObj.toDateString();
            });

            // Generate schedule HTML
            setTimeout(function() {
                if (filteredSchedules.length > 0) {
                    generateScheduleHTML(filteredSchedules, selectedDate);
                } else {
                    $('#scheduleContent').html(`
                        <div class="text-center py-5">
                            <i class="fas fa-calendar-times fa-3x text-muted mb-3"></i>
                            <h5 class="text-muted">Không có suất chiếu</h5>
                            <p class="text-muted">Không có lịch chiếu nào trong ngày được chọn.</p>
                            <a href="${window.location.href}" class="btn btn-primary">
                                <i class="fas fa-film me-1"></i>Xem danh sách phim
                            </a>
                        </div>
                    `);
                }
            }, 500);
        }

        function generateScheduleHTML(schedules, selectedDate) {
            var selectedDateObj = new Date(selectedDate);
            var now = new Date();
            var dayNames = ['Chủ Nhật', 'Thứ Hai', 'Thứ Ba', 'Thứ Tư', 'Thứ Năm', 'Thứ Sáu', 'Thứ Bảy'];
            var dayName = dayNames[selectedDateObj.getDay()];
            var formattedDate = dayName + ', ' + selectedDateObj.getDate().toString().padStart(2, '0') + '/' + 
                               (selectedDateObj.getMonth() + 1).toString().padStart(2, '0') + '/' + selectedDateObj.getFullYear();

            var html = `
                <div class="container-fluid p-4">
                    <div class="current-day-header text-center mb-4">
                        <h5 class="text-primary mb-2">
                            <i class="fas fa-calendar-day me-2"></i>
                            Lịch chiếu ngày ${formattedDate}
                        </h5>
                        <span class="badge bg-primary fs-6">${schedules.length} suất chiếu</span>
                    </div>
                    <div class="row g-3">
            `;

            schedules.forEach(function(schedule, index) {
                var startTime = new Date(schedule.ThoiGianBatDau || schedule.thoiGianBatDau);
                var endTime = new Date(schedule.ThoiGianKetThuc || schedule.thoiGianKetThuc);
                var isShowtime = startTime > now;
                var timeStatus, btnClass, btnText;

                if (endTime < now) {
                    timeStatus = "Đã kết thúc";
                    btnClass = "btn-secondary";
                    btnText = "Đã chiếu";
                } else if (startTime <= now && endTime > now) {
                    timeStatus = "Đang chiếu";
                    btnClass = "btn-warning";
                    btnText = "Đang chiếu";
                } else {
                    timeStatus = "Sắp chiếu";
                    btnClass = "btn-primary";
                    btnText = "Đặt vé ngay";
                }

                var formatTime = function(date) {
                    return date.getHours().toString().padStart(2, '0') + ':' + 
                           date.getMinutes().toString().padStart(2, '0');
                };

                var formatCurrency = function(amount) {
                    return new Intl.NumberFormat('vi-VN').format(amount);
                };

                // Get properties with fallback for both PascalCase and camelCase
                var phongChieu = schedule.PhongChieu || schedule.phongChieu;
                var phim = schedule.Phim || schedule.phim;
                var gia = schedule.Gia || schedule.gia;

                html += `
                    <div class="col-md-6 col-lg-4 col-xl-3">
                        <div class="today-schedule-card" style="animation-delay: ${index * 0.1}s">
                            <div class="schedule-time-header">
                                <span class="schedule-time">${formatTime(startTime)}</span>
                                <small class="text-white">- ${formatTime(endTime)}</small>
                            </div>
                            <div class="schedule-content">
                                <h6 class="movie-title text-primary mb-2">${(phim.TenPhim || phim.tenPhim)}</h6>
                                <div class="schedule-info">
                                    <div class="info-item">
                                        <i class="fas fa-map-marker-alt text-primary me-2"></i>
                                        <span class="small">${(phongChieu.TenPhong || phongChieu.tenPhong)}</span>
                                    </div>
                                    <div class="info-item">
                                        <i class="fas fa-tag text-primary me-2"></i>
                                        <span class="fw-bold text-primary">${formatCurrency(gia)} VNĐ</span>
                                    </div>
                                </div>
                                <div class="schedule-action mt-3">
                                    <div class="d-flex justify-content-between align-items-center">
                                        <small class="status-badge badge bg-info">${timeStatus}</small>
                `;

                if (isShowtime) {
                    html += `
                                        <a href="/KhachHang/ChonGhe?maLichChieu=${schedule.MaLichChieu || schedule.maLichChieu}" class="btn ${btnClass} btn-sm">
                                            <i class="fas fa-ticket-alt me-1"></i>${btnText}
                                        </a>
                    `;
                } else {
                    html += `
                                        <button class="btn ${btnClass} btn-sm" disabled>
                                            <i class="fas fa-clock me-1"></i>${btnText}
                                        </button>
                    `;
                }

                html += `
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                `;
            });

            html += `
                    </div>
                </div>
            `;

            $('#scheduleContent').html(html);

            // Re-apply animations
            $('.today-schedule-card').each(function(index) {
                $(this).css('animation-delay', (index * 0.1) + 's');
            });
        }

        function updateCartCount() {
            // Lấy số lượng từ sessionStorage hoặc API
            var cart = JSON.parse(sessionStorage.getItem('cart') || '[]');
            $('#cart-count').text(cart.length);
        }
    </script>
    <style>
        .lich-chieu-item {
            transition: all 0.3s ease;
            border: 1px solid #e9ecef !important;
        }
        .lich-chieu-item:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 8px rgba(0,0,0,0.1);
            border-color: #28a745 !important;
        }
        .card-header h6 {
            text-transform: capitalize;
        }
        .btn-outline-success:hover {
            transform: scale(1.05);
        }

        /* Carousel Styles */
        #lichChieuCarousel, #phimCarousel {
            background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);
        }
        
        /* Phim Carousel Styles */
        .phim-carousel-card {
            transition: all 0.4s ease;
            box-shadow: 0 4px 15px rgba(0,0,0,0.1);
            border: none;
            overflow: hidden;
            opacity: 0;
            transform: translateY(20px);
        }

        .phim-carousel-card.slide-in {
            opacity: 1;
            transform: translateY(0);
        }

        .phim-carousel-card.slide-out {
            opacity: 0;
            transform: translateY(-20px);
        }
        
        .phim-carousel-card:hover {
            transform: translateY(-8px) scale(1.03);
            box-shadow: 0 8px 30px rgba(0,123,255,0.3);
        }

        .phim-carousel-card .card-img-top img {
            transition: all 0.3s ease;
        }

        .phim-carousel-card:hover .card-img-top img {
            transform: scale(1.05);
        }

        .phim-carousel-card .info-line {
            display: flex;
            align-items: center;
            margin-bottom: 5px;
        }

        .phim-carousel-card .card-title {
            font-size: 15px;
            font-weight: 600;
            margin-bottom: 10px;
            line-height: 1.3;
        }

        #phimCarousel .carousel-control-prev, 
        #phimCarousel .carousel-control-next {
            width: 5%;
            background: rgba(0, 123, 255, 0.1);
        }
        
        #phimCarousel .carousel-control-prev-icon, 
        #phimCarousel .carousel-control-next-icon {
            background-color: #007bff;
            border-radius: 50%;
            padding: 20px;
        }

        #phimCarousel .carousel-indicators {
            bottom: -50px;
        }
        
        #phimCarousel .carousel-indicators button {
            background-color: #007bff;
            width: 12px;
            height: 12px;
            border-radius: 50%;
            border: none;
            margin: 0 5px;
        }
        
        #phimCarousel .carousel-indicators button.active {
            background-color: #0056b3;
            transform: scale(1.3);
        }

        #phimCarousel .carousel-inner {
            padding-bottom: 60px;
        }
        
        #phimCarousel .carousel-item {
            min-height: 450px;
        }
        
        .lich-chieu-slide-item {
            transition: all 0.3s ease;
            box-shadow: 0 2px 10px rgba(0,0,0,0.1);
            border: 2px solid #28a745 !important;
        }
        
        .lich-chieu-slide-item:hover {
            transform: translateY(-5px) scale(1.02);
            box-shadow: 0 8px 25px rgba(40, 167, 69, 0.3);
        }
        
        #lichChieuCarousel .carousel-inner {
            padding-bottom: 60px;
        }
        
        #lichChieuCarousel .carousel-item {
            min-height: 500px;
        }
        
        /* Animation khi chuyển slide */
        .carousel-item-start, .carousel-item-end {
            transition: transform 0.6s ease-in-out;
        }

        /* Timeline Styles - Simplified for today's schedule */
        .current-day-header {
            border-bottom: 3px solid #007bff;
            padding-bottom: 20px;
            margin-bottom: 30px;
        }

        .current-day-header h5 {
            text-transform: capitalize;
            font-weight: 700;
            color: #0056b3;
        }

        .today-schedule-card {
            background: white;
            border: 2px solid #e9ecef;
            border-radius: 15px;
            overflow: hidden;
            transition: all 0.3s ease;
            box-shadow: 0 3px 15px rgba(0,0,0,0.1);
            margin-bottom: 20px;
        }

        .today-schedule-card:hover {
            border-color: #007bff;
            transform: translateY(-5px);
            box-shadow: 0 8px 25px rgba(0, 123, 255, 0.2);
        }

        .schedule-time-header {
            background: linear-gradient(135deg, #007bff 0%, #0056b3 100%);
            color: white;
            padding: 12px 15px;
            text-align: center;
            border-bottom: 1px solid #dee2e6;
        }

        .schedule-time {
            font-size: 18px;
            font-weight: 700;
        }

        .schedule-content {
            padding: 15px;
        }

        .movie-title {
            font-size: 16px;
            font-weight: 600;
            line-height: 1.3;
            margin-bottom: 10px;
        }

        .schedule-info {
            margin-bottom: 15px;
        }

        .info-item {
            display: flex;
            align-items: center;
            margin-bottom: 8px;
            font-size: 14px;
        }

        .info-item:last-child {
            margin-bottom: 0;
        }

        .schedule-action {
            border-top: 1px solid #f0f0f0;
            padding-top: 15px;
        }

        .status-badge {
            font-size: 11px;
            padding: 4px 8px;
        }

        .today-schedule-card .btn {
            font-size: 12px;
            padding: 6px 12px;
            border-radius: 8px;
            transition: all 0.3s ease;
        }

        .today-schedule-card .btn:hover:not(:disabled) {
            transform: scale(1.05);
        }

        .today-schedule-card .btn-primary:hover {
            background-color: #0056b3;
            border-color: #004085;
        }

        .today-schedule-card .btn-warning:hover {
            background-color: #e0a800;
            border-color: #d39e00;
        }

        /* Animation for schedule cards */
        .today-schedule-card {
            opacity: 0;
            transform: translateY(20px);
            animation: slideInUp 0.6s ease forwards;
        }

        .today-schedule-card:nth-child(1) { animation-delay: 0.1s; }
        .today-schedule-card:nth-child(2) { animation-delay: 0.2s; }
        .today-schedule-card:nth-child(3) { animation-delay: 0.3s; }
        .today-schedule-card:nth-child(4) { animation-delay: 0.4s; }
        .today-schedule-card:nth-child(5) { animation-delay: 0.5s; }
        .today-schedule-card:nth-child(6) { animation-delay: 0.6s; }

        @@keyframes slideInUp {
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        /* Responsive */
        @@media (max-width: 768px) {
            .current-day-header h5 {
                font-size: 1.1rem;
            }
            
            .today-schedule-card {
                margin-bottom: 15px;
            }
            
            .schedule-time {
                font-size: 16px;
            }
            
            .movie-title {
                font-size: 14px;
            }
        }

        .btn-hover-effect {
            transform: scale(1.05) !important;

            box-shadow: 0 4px 15px rgba(0, 123, 255, 0.4) !important;
        }

        /* Date Filter Styles */
        #dateFilter {
            background-color: white;

            border: 2px solid #007bff;
            border-radius: 8px;
            color: #495057;
            font-weight: 500;
            transition: all 0.3s ease;
        }

        #dateFilter:focus {

            border-color: #0056b3;
            box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);
            outline: none;
        }

        #dateFilter:hover {
            border-color: #0056b3;
        }

        /* Loading animation */
        @@keyframes fadeIn {
            from { opacity: 0; transform: translateY(10px); }
            to { opacity: 1; transform: translateY(0); }
        }

        .schedule-loading {
            animation: fadeIn 0.5s ease forwards;
        }

        /* Schedule transition */
        .schedule-transition {
            transition: all 0.3s ease;
        }
        
        /* Movie Rating Styles */
        .rating-line {
            margin-top: 5px;
        }
        
        .movie-rating {
            display: flex;
            align-items: center;
        }
        
        .stars-small {
            display: flex;
            align-items: center;
        }
        
        .stars-small i {
            font-size: 0.75rem;
            margin-right: 1px;
        }
        
        .rating-text {
            white-space: nowrap;
        }
        
        /* Animation for rating load */
        .rating-line {
            animation: fadeInRating 0.5s ease-in-out;
        }
        
        @@keyframes fadeInRating {
            from {
                opacity: 0;
                transform: translateY(5px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        /* Advanced Filter Styles */
        .advanced-filter-section {
            margin-bottom: 2rem;
        }

        .bg-gradient-primary {
            background: linear-gradient(135deg, #007bff 0%, #0056b3 100%);
        }

        .advanced-filter-section .card {
            border-radius: 15px;
            overflow: hidden;
            transition: all 0.3s ease;
        }

        .advanced-filter-section .card:hover {
            box-shadow: 0 8px 30px rgba(0, 123, 255, 0.2);
        }

        .advanced-filter-section .card-header {
            border-bottom: none;
            padding: 1.25rem 1.5rem;
        }

        .advanced-filter-section .card-body {
            padding: 1.5rem;
        }

        .form-label {
            font-weight: 600;
            margin-bottom: 0.5rem;
            color: #495057;
        }

        .form-select, .form-control {
            border-radius: 8px;
            border: 2px solid #e9ecef;
            transition: all 0.3s ease;
            padding: 0.75rem 1rem;
        }

        .form-select:focus, .form-control:focus {
            border-color: #007bff;
            box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.15);
            transform: translateY(-1px);
        }

        .form-select:hover, .form-control:hover {
            border-color: #80bdff;
        }

        /* Rating Slider Styles */
        .rating-slider-container {
            padding: 0.5rem 0;
        }

        .form-range {
            height: 6px;
            background: linear-gradient(to right, #dc3545 0%, #ffc107 50%, #28a745 100%);
            border-radius: 10px;
            outline: none;
        }

        .form-range::-webkit-slider-thumb {
            width: 20px;
            height: 20px;
            background: #007bff;
            border-radius: 50%;
            border: 3px solid white;
            box-shadow: 0 2px 10px rgba(0, 123, 255, 0.3);
            cursor: pointer;
            transition: all 0.3s ease;
        }

        .form-range::-webkit-slider-thumb:hover {
            background: #0056b3;
            transform: scale(1.2);
            box-shadow: 0 4px 15px rgba(0, 123, 255, 0.5);
        }

        .form-range::-moz-range-thumb {
            width: 20px;
            height: 20px;
            background: #007bff;
            border-radius: 50%;
            border: 3px solid white;
            box-shadow: 0 2px 10px rgba(0, 123, 255, 0.3);
            cursor: pointer;
            transition: all 0.3s ease;
        }

        #ratingValue {
            font-size: 1.1rem;
            font-weight: 700;
        }

        /* Filter Summary Styles */
        .filter-summary {
            max-width: 400px;
            padding: 0.5rem 1rem;
            background: rgba(0, 123, 255, 0.1);
            border: 1px solid rgba(0, 123, 255, 0.2);
            border-radius: 8px;
            margin-left: auto;
        }

        /* Button Styles */
        .btn-lg {
            padding: 0.75rem 2rem;
            font-weight: 600;
            border-radius: 10px;
            transition: all 0.3s ease;
        }

        .btn-primary {
            background: linear-gradient(135deg, #007bff 0%, #0056b3 100%);
            border: none;
            box-shadow: 0 4px 15px rgba(0, 123, 255, 0.3);
        }

        .btn-primary:hover {
            background: linear-gradient(135deg, #0056b3 0%, #004085 100%);
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(0, 123, 255, 0.4);
        }

        .btn-outline-secondary {
            border: 2px solid #6c757d;
            color: #6c757d;
            font-weight: 600;
            border-radius: 8px;
            transition: all 0.3s ease;
        }

        .btn-outline-secondary:hover {
            background: #6c757d;
            border-color: #6c757d;
            color: white;
            transform: translateY(-1px);
        }

        .btn-outline-light {
            border: 2px solid rgba(255, 255, 255, 0.3);
            transition: all 0.3s ease;
        }

        .btn-outline-light:hover {
            background: rgba(255, 255, 255, 0.2);
            border-color: rgba(255, 255, 255, 0.5);
            transform: scale(1.05);
        }

        /* Input Group Styles */
        .input-group-lg .input-group-text {
            padding: 1rem 1.25rem;
            font-size: 1.1rem;
            border: none;
        }

        .input-group-lg .form-control {
            border: none;
            box-shadow: none;
            font-size: 1.1rem;
        }

        .input-group {
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
            border-radius: 10px;
            overflow: hidden;
        }

        /* Badge Styles */
        .badge {
            font-size: 0.75rem;
            padding: 0.5rem 0.75rem;
            border-radius: 20px;
            font-weight: 600;
        }

        .bg-warning {
            background: linear-gradient(135deg, #ffc107 0%, #e0a800 100%) !important;
        }

        /* Animation for filter toggle */
        #filterContent {
            transition: all 0.3s ease;
        }

        /* Responsive adjustments */
        @@media (max-width: 768px) {
            .advanced-filter-section .card-body {
                padding: 1rem;
            }
            
            .form-label {
                font-size: 0.9rem;
            }
            
            .btn-lg {
                padding: 0.6rem 1.5rem;
                font-size: 0.9rem;
            }
            
            .filter-summary {
                max-width: 100%;
                margin-top: 1rem;
                margin-left: 0;
            }
            
            .d-flex.justify-content-between {
                flex-direction: column !important;
                align-items: stretch !important;
            }
        }

        /* Loading state for filters */
        .filter-loading {
            opacity: 0.6;
            pointer-events: none;
        }

        .filter-loading::after {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: rgba(255, 255, 255, 0.8);
            display: flex;
            align-items: center;
            justify-content: center;
            z-index: 1000;
        }

        /* Hover effects for form controls */
        .form-select:hover {
            cursor: pointer;
        }

        .form-control:hover {
            cursor: text;
        }

        /* Icon colors */
        .text-primary { color: #007bff !important; }
        .text-info { color: #17a2b8 !important; }
        .text-warning { color: #ffc107 !important; }
        .text-success { color: #28a745 !important; }
        .text-secondary { color: #6c757d !important; }
    </style>
}
