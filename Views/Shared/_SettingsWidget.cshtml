

<!-- Settings Widget -->
<div class="settings-widget-container">
    <!-- Settings Toggle Button -->
    <button type="button" class="btn settings-toggle-btn" 
            data-bs-toggle="dropdown" aria-expanded="false" 
            title="Settings">
        <i class="fas fa-cog"></i>
        <span class="d-none d-md-inline ms-2">Settings</span>
    </button>

    <!-- Settings Dropdown Menu -->
    <div class="dropdown-menu dropdown-menu-end settings-widget p-3" style="min-width: 280px;">
        <!-- Header -->
        <div class="d-flex align-items-center justify-content-between mb-3 pb-2 border-bottom">
            <h6 class="mb-0">
                <i class="fas fa-cog me-2"></i>Theme Settings
            </h6>
            <button type="button" class="btn-close btn-sm" aria-label="Close" 
                    onclick="document.querySelector('.settings-toggle-btn').click()"></button>
        </div>

        <!-- Theme Setting -->
        <div class="setting-group mb-3">
            <label class="form-label fw-bold">
                <i class="fas fa-palette me-2"></i>Appearance
            </label>
            <div class="theme-options">
                <button type="button" class="theme-toggle-btn btn btn-outline-primary w-100">
                    <i class="fas fa-moon me-2"></i>
                    <span class="theme-text">Dark Mode</span>
                </button>
                <small class="text-muted mt-1 d-block">
                    <i class="fas fa-keyboard me-1"></i>
                    Ctrl + Shift + T
                </small>
            </div>
        </div>

        <!-- Quick Actions -->
        <div class="setting-group">
            <label class="form-label fw-bold">
                <i class="fas fa-bolt me-2"></i>Quick Actions
            </label>
            <div class="d-grid gap-2">
                <button type="button" class="btn btn-sm btn-outline-info" onclick="location.reload()">
                    <i class="fas fa-sync-alt me-2"></i>Refresh
                </button>
                <button type="button" class="btn btn-sm btn-outline-warning reset-settings-btn">
                    <i class="fas fa-undo me-2"></i>Reset Theme
                </button>
            </div>
        </div>

        <!-- Footer Info -->
        <div class="settings-footer mt-3 pt-2 border-top">
            <small class="text-muted">
                <i class="fas fa-info-circle me-1"></i>
                Theme preference is saved automatically
            </small>
        </div>
    </div>
</div>

<style>
    /* Settings Widget Styles */
    .settings-widget-container {
        position: relative;
        display: inline-block;
    }

    .settings-toggle-btn {
        background: var(--card-bg);
        border: 2px solid var(--border-color);
        color: var(--text-primary);
        border-radius: 50px;
        padding: 8px 16px;
        transition: all 0.3s ease;
        position: relative;
        box-shadow: var(--shadow-sm);
    }

    .settings-toggle-btn:hover {
        border-color: var(--primary-color);
        color: var(--primary-color);
        background: var(--primary-light);
        transform: translateY(-2px);
        box-shadow: var(--shadow);
    }

    .settings-toggle-btn i {
        animation: rotate 2s linear infinite;
        animation-play-state: paused;
    }

    .settings-toggle-btn:hover i {
        animation-play-state: running;
    }

    @@keyframes rotate {
        from { transform: rotate(0deg); }
        to { transform: rotate(360deg); }
    }

    .settings-widget {
        border-radius: 15px;
        border: none;
        box-shadow: var(--shadow-lg);
        background: var(--card-bg) !important;
        backdrop-filter: blur(10px);
        margin-top: 10px;
    }

    .setting-group {
        padding: 10px 0;
    }

    .setting-group:not(:last-child) {
        border-bottom: 1px solid var(--border-light);
    }

    .setting-group .form-label {
        color: var(--text-primary);
        font-size: 14px;
        margin-bottom: 8px;
        display: flex;
        align-items: center;
    }

    .theme-options {
        position: relative;
    }



    .settings-footer {
        text-align: center;
    }

    .reset-settings-btn:hover {
        background-color: var(--color-warning);
        border-color: var(--color-warning);
        color: var(--text-inverse);
    }

    /* Mobile Responsive */
    @@media (max-width: 768px) {
        .settings-widget {
            min-width: 260px !important;
            max-width: 90vw;
        }
        
        .settings-toggle-btn {
            padding: 6px 12px;
        }
        
        .settings-toggle-btn .d-none.d-md-inline {
            display: none !important;
        }
    }

    /* Dark mode adjustments */
    [data-theme="dark"] .settings-toggle-btn {
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.3);
    }

    [data-theme="dark"] .settings-widget {
        box-shadow: 0 10px 40px rgba(0, 0, 0, 0.5);
    }

    /* Animation for widget appearance */
    .settings-widget {
        animation: settingsSlideIn 0.3s ease-out;
        transform-origin: top right;
    }

    @@keyframes settingsSlideIn {
        from {
            opacity: 0;
            transform: scale(0.95) translateY(-10px);
        }
        to {
            opacity: 1;
            transform: scale(1) translateY(0);
        }
    }

    /* Notification badge for settings */
    .settings-toggle-btn::after {
        content: '';
        position: absolute;
        top: -2px;
        right: -2px;
        width: 8px;
        height: 8px;
        background: var(--color-success);
        border-radius: 50%;
        opacity: 0;
        transition: opacity 0.3s ease;
    }

    .settings-toggle-btn.has-updates::after {
        opacity: 1;
    }
</style>

<script>
    // Settings Widget Initialization
    document.addEventListener('DOMContentLoaded', function() {
        initializeSettingsWidget();
    });

    function initializeSettingsWidget() {
        // Reset theme functionality
        const resetBtn = document.querySelector('.reset-settings-btn');
        if (resetBtn) {
            resetBtn.addEventListener('click', function() {
                if (confirm('Are you sure you want to reset theme to default?')) {
                    // Clear theme localStorage
                    localStorage.removeItem('dcine-theme-preference');
                    
                    // Reset to light theme
                    if (window.DCineThemeSystem) {
                        window.DCineThemeSystem.setTheme('light');
                    }
                    
                    // Show success message
                    if (window.DCineApp && window.DCineApp.showSuccess) {
                        window.DCineApp.showSuccess('Theme has been reset to light mode');
                    }
                }
            });
        }

        // Add keyboard shortcut info tooltip
        const shortcuts = document.querySelectorAll('.setting-group small');
        shortcuts.forEach(shortcut => {
            shortcut.setAttribute('title', 'Keyboard shortcut');
        });

        // Animate settings button on first visit
        const settingsBtn = document.querySelector('.settings-toggle-btn');
        if (settingsBtn && !localStorage.getItem('dcine-settings-seen')) {
            setTimeout(() => {
                settingsBtn.classList.add('has-updates');
                localStorage.setItem('dcine-settings-seen', 'true');
                
                // Remove the notification after 5 seconds
                setTimeout(() => {
                    settingsBtn.classList.remove('has-updates');
                }, 5000);
            }, 2000);
        }

        console.log('⚙️ Theme Settings Widget initialized');
    }
</script> 
